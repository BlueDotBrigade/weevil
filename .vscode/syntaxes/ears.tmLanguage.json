{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "EARS Requirements Syntax",
    "patterns": [       
        {
            "name": "meta.ears.complex",
            "description": "Complex Condition: Use when both a specific state and an event trigger are relevant to the requirement.",
            "match": "\\b(While) (.*)\\, (when) (.*), (the) (.*) (shall).*\\.",
            "captures": {
                "1": {
                    "name": "keyword.other.ears"
                },
                "2": {
                    "name": "entity.name.ears.precondition"
                },
                "3": {
                    "name": "keyword.other.ears"
                },
                "4": {
                    "name": "entity.name.ears.trigger"
                },
                "5": {
                    "name": "keyword.other.ears"
                },
                "6": {
                    "name": "entity.name.ears.system"
                },
                "7": {
                    "name": "keyword.other.ears"
                },
                "8": {
                    "name": "entity.name.ears.response"
                }
            }
        }, 
        {
            "name": "meta.ears.state",
            "description": "State-Based: Use when the requirement is relevant only in a specific system state.",
            "match": "^\\s*(?:[\\d-]+\\.\\s+|[-*]\\s+)?\\b(While) (.*)(\\, the) (.*) (shall) (.*)\\.",
            "captures": {
                "1": {
                    "name": "keyword.other.ears"
                },
                "2": {
                    "name": "entity.name.ears.precondition"
                },
                "3": {
                    "name": "keyword.other.ears"
                },
                "4": {
                    "name": "entity.name.ears.system"
                },
                "5": {
                    "name": "keyword.other.ears"
                },
                "6": {
                    "name": "entity.name.ears.response"
                }
            }
        },
        {
            "name": "meta.ears.event",
            "description": "Event-Triggered: Use when an event triggers the requirement to be relevant.",
            "match": "^\\s*(?:[\\d-]+\\.\\s+|[-*]\\s+)?\\b(When) (.*)(\\, the) (.*) (shall) (.*)\\.",
            "captures": {
                "1": {
                    "name": "keyword.other.ears"
                },
                "2": {
                    "name": "entity.name.ears.trigger"
                },
                "3": {
                    "name": "keyword.other.ears"
                },
                "4": {
                    "name": "entity.name.ears.system"
                },
                "5": {
                    "name": "keyword.other.ears"
                },
                "6": {
                    "name": "entity.name.ears.response"
                }
            }
        },
        {
            "name": "meta.ears.optional",
            "description": "Context-Specific: Use when the requirement applies in a particular context or situation.",
            "match": "^\\s*(?:[\\d-]+\\.\\s+|[-*]\\s+)?\\b(Where) (.*)(\\, the) (.*) (shall) (.*)\\.",
            "captures": {
                "1": {
                    "name": "keyword.other.ears"
                },
                "2": {
                    "name": "entity.name.ears.feature"
                },
                "3": {
                    "name": "keyword.other.ears"
                },
                "4": {
                    "name": "entity.name.ears.system"
                },
                "5": {
                    "name": "keyword.other.ears"
                },
                "6": {
                    "name": "entity.name.ears.response"
                }
            }
        },
        {
            "name": "meta.ears.unwanted",
            "description": "Error Handling: Use to specify how the system should handle undesirable or unwanted scenarios.",
            "match": "^\\s*(?:[\\d-]+\\.\\s+|[-*]\\s+)?\\b(If) (.*)(\\ then) (.*) (shall) (.*)\\.",
            "captures": {
                "1": {
                    "name": "keyword.other.ears"
                },
                "2": {
                    "name": "entity.name.ears.trigger"
                },
                "3": {
                    "name": "keyword.other.ears"
                },
                "4": {
                    "name": "entity.name.ears.system"
                },
                "5": {
                    "name": "keyword.other.ears"
                },
                "6": {
                    "name": "entity.name.ears.response"
                }
            }
        },
        {
            "name": "meta.ears.ubiquitous",
            "description": "Always Active: Use when the requirement is continuously in effect.",
            "match": "^\\s*(?:[\\d-]+\\.\\s+|[-*]\\s+)?\\b(The) (.*) (shall) (.*)\\.",
            "captures": {
                "1": {
                    "name": "keyword.other.ears"
                },
                "2": {
                    "name": "entity.name.ears.system"
                },
                "3": {
                    "name": "keyword.other.ears"
                },
                "4": {
                    "name": "entity.name.ears.response"
                }
            }
        }
    ],
    "scopeName": "source.ears"
}
